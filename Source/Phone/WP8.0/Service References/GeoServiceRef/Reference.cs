//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace SOS.Phone.GeoServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoTags", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class GeoTags : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<double> AccuracyField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> AltField;
        
        private string IdField;
        
        private System.Collections.ObjectModel.ObservableCollection<bool> IsSOSField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> LatField;
        
        private int LocCntField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> LongField;
        
        private long PIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> SpdField;
        
        private System.Collections.ObjectModel.ObservableCollection<long> TSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<double> Accuracy {
            get {
                return this.AccuracyField;
            }
            set {
                if ((object.ReferenceEquals(this.AccuracyField, value) != true)) {
                    this.AccuracyField = value;
                    this.RaisePropertyChanged("Accuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Alt {
            get {
                return this.AltField;
            }
            set {
                if ((object.ReferenceEquals(this.AltField, value) != true)) {
                    this.AltField = value;
                    this.RaisePropertyChanged("Alt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<bool> IsSOS {
            get {
                return this.IsSOSField;
            }
            set {
                if ((object.ReferenceEquals(this.IsSOSField, value) != true)) {
                    this.IsSOSField = value;
                    this.RaisePropertyChanged("IsSOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Lat {
            get {
                return this.LatField;
            }
            set {
                if ((object.ReferenceEquals(this.LatField, value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocCnt {
            get {
                return this.LocCntField;
            }
            set {
                if ((this.LocCntField.Equals(value) != true)) {
                    this.LocCntField = value;
                    this.RaisePropertyChanged("LocCnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Long {
            get {
                return this.LongField;
            }
            set {
                if ((object.ReferenceEquals(this.LongField, value) != true)) {
                    this.LongField = value;
                    this.RaisePropertyChanged("Long");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PID {
            get {
                return this.PIDField;
            }
            set {
                if ((this.PIDField.Equals(value) != true)) {
                    this.PIDField = value;
                    this.RaisePropertyChanged("PID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> Spd {
            get {
                return this.SpdField;
            }
            set {
                if ((object.ReferenceEquals(this.SpdField, value) != true)) {
                    this.SpdField = value;
                    this.RaisePropertyChanged("Spd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<long> TS {
            get {
                return this.TSField;
            }
            set {
                if ((object.ReferenceEquals(this.TSField, value) != true)) {
                    this.TSField = value;
                    this.RaisePropertyChanged("TS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoTag", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOS.Phone.GeoServiceRef.IncidentTag))]
    public partial class GeoTag : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AccuracyField;
        
        private string AdditionalInfoField;
        
        private string AltField;
        
        private string CommandField;
        
        private string GeoDirectionField;
        
        private System.Nullable<bool> IsSOSField;
        
        private string LatField;
        
        private string LongField;
        
        private byte[] MediaContentField;
        
        private string MediaUriField;
        
        private long ProfileIDField;
        
        private string SessionIDField;
        
        private int SpeedField;
        
        private long TimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Accuracy {
            get {
                return this.AccuracyField;
            }
            set {
                if ((this.AccuracyField.Equals(value) != true)) {
                    this.AccuracyField = value;
                    this.RaisePropertyChanged("Accuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alt {
            get {
                return this.AltField;
            }
            set {
                if ((object.ReferenceEquals(this.AltField, value) != true)) {
                    this.AltField = value;
                    this.RaisePropertyChanged("Alt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GeoDirection {
            get {
                return this.GeoDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.GeoDirectionField, value) != true)) {
                    this.GeoDirectionField = value;
                    this.RaisePropertyChanged("GeoDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSOS {
            get {
                return this.IsSOSField;
            }
            set {
                if ((this.IsSOSField.Equals(value) != true)) {
                    this.IsSOSField = value;
                    this.RaisePropertyChanged("IsSOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lat {
            get {
                return this.LatField;
            }
            set {
                if ((object.ReferenceEquals(this.LatField, value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Long {
            get {
                return this.LongField;
            }
            set {
                if ((object.ReferenceEquals(this.LongField, value) != true)) {
                    this.LongField = value;
                    this.RaisePropertyChanged("Long");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] MediaContent {
            get {
                return this.MediaContentField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaContentField, value) != true)) {
                    this.MediaContentField = value;
                    this.RaisePropertyChanged("MediaContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaUri {
            get {
                return this.MediaUriField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaUriField, value) != true)) {
                    this.MediaUriField = value;
                    this.RaisePropertyChanged("MediaUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncidentTag", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class IncidentTag : SOS.Phone.GeoServiceRef.GeoTag {
        
        private string MobileNumberField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.microsoft.com/sos/2013/02", ConfigurationName="GeoServiceRef.GeoService")]
    public interface GeoService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/GeoService/PostMyLocation", ReplyAction="http://www.microsoft.com/sos/2013/02/GeoService/PostMyLocationResponse")]
        System.IAsyncResult BeginPostMyLocation(SOS.Phone.GeoServiceRef.GeoTags GeoTags, System.AsyncCallback callback, object asyncState);
        
        bool EndPostMyLocation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/GeoService/PostLocationWithMedia", ReplyAction="http://www.microsoft.com/sos/2013/02/GeoService/PostLocationWithMediaResponse")]
        System.IAsyncResult BeginPostLocationWithMedia(SOS.Phone.GeoServiceRef.GeoTag GeoTag, System.AsyncCallback callback, object asyncState);
        
        bool EndPostLocationWithMedia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/GeoService/StopPostings", ReplyAction="http://www.microsoft.com/sos/2013/02/GeoService/StopPostingsResponse")]
        System.IAsyncResult BeginStopPostings(string ProfileID, string SessionID, string Ticks, System.AsyncCallback callback, object asyncState);
        
        void EndStopPostings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/GeoService/StopSOSOnly", ReplyAction="http://www.microsoft.com/sos/2013/02/GeoService/StopSOSOnlyResponse")]
        System.IAsyncResult BeginStopSOSOnly(string ProfileID, string SessionID, string Ticks, System.AsyncCallback callback, object asyncState);
        
        void EndStopSOSOnly(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/GeoService/UpdateLastSMSPostedTime", ReplyAction="http://www.microsoft.com/sos/2013/02/GeoService/UpdateLastSMSPostedTimeResponse")]
        System.IAsyncResult BeginUpdateLastSMSPostedTime(string ProfileID, string SessionID, string SMSPostedTime, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateLastSMSPostedTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/GeoService/ReportIncident", ReplyAction="http://www.microsoft.com/sos/2013/02/GeoService/ReportIncidentResponse")]
        System.IAsyncResult BeginReportIncident(SOS.Phone.GeoServiceRef.IncidentTag incidentTag, System.AsyncCallback callback, object asyncState);
        
        string EndReportIncident(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GeoServiceChannel : SOS.Phone.GeoServiceRef.GeoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostMyLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostMyLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostLocationWithMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PostLocationWithMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportIncidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReportIncidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeoServiceClient : System.ServiceModel.ClientBase<SOS.Phone.GeoServiceRef.GeoService>, SOS.Phone.GeoServiceRef.GeoService {
        
        private BeginOperationDelegate onBeginPostMyLocationDelegate;
        
        private EndOperationDelegate onEndPostMyLocationDelegate;
        
        private System.Threading.SendOrPostCallback onPostMyLocationCompletedDelegate;
        
        private BeginOperationDelegate onBeginPostLocationWithMediaDelegate;
        
        private EndOperationDelegate onEndPostLocationWithMediaDelegate;
        
        private System.Threading.SendOrPostCallback onPostLocationWithMediaCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopPostingsDelegate;
        
        private EndOperationDelegate onEndStopPostingsDelegate;
        
        private System.Threading.SendOrPostCallback onStopPostingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopSOSOnlyDelegate;
        
        private EndOperationDelegate onEndStopSOSOnlyDelegate;
        
        private System.Threading.SendOrPostCallback onStopSOSOnlyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLastSMSPostedTimeDelegate;
        
        private EndOperationDelegate onEndUpdateLastSMSPostedTimeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLastSMSPostedTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginReportIncidentDelegate;
        
        private EndOperationDelegate onEndReportIncidentDelegate;
        
        private System.Threading.SendOrPostCallback onReportIncidentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public GeoServiceClient() {
        }
        
        public GeoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<PostMyLocationCompletedEventArgs> PostMyLocationCompleted;
        
        public event System.EventHandler<PostLocationWithMediaCompletedEventArgs> PostLocationWithMediaCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopPostingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopSOSOnlyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateLastSMSPostedTimeCompleted;
        
        public event System.EventHandler<ReportIncidentCompletedEventArgs> ReportIncidentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.GeoServiceRef.GeoService.BeginPostMyLocation(SOS.Phone.GeoServiceRef.GeoTags GeoTags, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostMyLocation(GeoTags, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SOS.Phone.GeoServiceRef.GeoService.EndPostMyLocation(System.IAsyncResult result) {
            return base.Channel.EndPostMyLocation(result);
        }
        
        private System.IAsyncResult OnBeginPostMyLocation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SOS.Phone.GeoServiceRef.GeoTags GeoTags = ((SOS.Phone.GeoServiceRef.GeoTags)(inValues[0]));
            return ((SOS.Phone.GeoServiceRef.GeoService)(this)).BeginPostMyLocation(GeoTags, callback, asyncState);
        }
        
        private object[] OnEndPostMyLocation(System.IAsyncResult result) {
            bool retVal = ((SOS.Phone.GeoServiceRef.GeoService)(this)).EndPostMyLocation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPostMyLocationCompleted(object state) {
            if ((this.PostMyLocationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostMyLocationCompleted(this, new PostMyLocationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostMyLocationAsync(SOS.Phone.GeoServiceRef.GeoTags GeoTags) {
            this.PostMyLocationAsync(GeoTags, null);
        }
        
        public void PostMyLocationAsync(SOS.Phone.GeoServiceRef.GeoTags GeoTags, object userState) {
            if ((this.onBeginPostMyLocationDelegate == null)) {
                this.onBeginPostMyLocationDelegate = new BeginOperationDelegate(this.OnBeginPostMyLocation);
            }
            if ((this.onEndPostMyLocationDelegate == null)) {
                this.onEndPostMyLocationDelegate = new EndOperationDelegate(this.OnEndPostMyLocation);
            }
            if ((this.onPostMyLocationCompletedDelegate == null)) {
                this.onPostMyLocationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostMyLocationCompleted);
            }
            base.InvokeAsync(this.onBeginPostMyLocationDelegate, new object[] {
                        GeoTags}, this.onEndPostMyLocationDelegate, this.onPostMyLocationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.GeoServiceRef.GeoService.BeginPostLocationWithMedia(SOS.Phone.GeoServiceRef.GeoTag GeoTag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPostLocationWithMedia(GeoTag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool SOS.Phone.GeoServiceRef.GeoService.EndPostLocationWithMedia(System.IAsyncResult result) {
            return base.Channel.EndPostLocationWithMedia(result);
        }
        
        private System.IAsyncResult OnBeginPostLocationWithMedia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SOS.Phone.GeoServiceRef.GeoTag GeoTag = ((SOS.Phone.GeoServiceRef.GeoTag)(inValues[0]));
            return ((SOS.Phone.GeoServiceRef.GeoService)(this)).BeginPostLocationWithMedia(GeoTag, callback, asyncState);
        }
        
        private object[] OnEndPostLocationWithMedia(System.IAsyncResult result) {
            bool retVal = ((SOS.Phone.GeoServiceRef.GeoService)(this)).EndPostLocationWithMedia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPostLocationWithMediaCompleted(object state) {
            if ((this.PostLocationWithMediaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PostLocationWithMediaCompleted(this, new PostLocationWithMediaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PostLocationWithMediaAsync(SOS.Phone.GeoServiceRef.GeoTag GeoTag) {
            this.PostLocationWithMediaAsync(GeoTag, null);
        }
        
        public void PostLocationWithMediaAsync(SOS.Phone.GeoServiceRef.GeoTag GeoTag, object userState) {
            if ((this.onBeginPostLocationWithMediaDelegate == null)) {
                this.onBeginPostLocationWithMediaDelegate = new BeginOperationDelegate(this.OnBeginPostLocationWithMedia);
            }
            if ((this.onEndPostLocationWithMediaDelegate == null)) {
                this.onEndPostLocationWithMediaDelegate = new EndOperationDelegate(this.OnEndPostLocationWithMedia);
            }
            if ((this.onPostLocationWithMediaCompletedDelegate == null)) {
                this.onPostLocationWithMediaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPostLocationWithMediaCompleted);
            }
            base.InvokeAsync(this.onBeginPostLocationWithMediaDelegate, new object[] {
                        GeoTag}, this.onEndPostLocationWithMediaDelegate, this.onPostLocationWithMediaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.GeoServiceRef.GeoService.BeginStopPostings(string ProfileID, string SessionID, string Ticks, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStopPostings(ProfileID, SessionID, Ticks, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SOS.Phone.GeoServiceRef.GeoService.EndStopPostings(System.IAsyncResult result) {
            base.Channel.EndStopPostings(result);
        }
        
        private System.IAsyncResult OnBeginStopPostings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProfileID = ((string)(inValues[0]));
            string SessionID = ((string)(inValues[1]));
            string Ticks = ((string)(inValues[2]));
            return ((SOS.Phone.GeoServiceRef.GeoService)(this)).BeginStopPostings(ProfileID, SessionID, Ticks, callback, asyncState);
        }
        
        private object[] OnEndStopPostings(System.IAsyncResult result) {
            ((SOS.Phone.GeoServiceRef.GeoService)(this)).EndStopPostings(result);
            return null;
        }
        
        private void OnStopPostingsCompleted(object state) {
            if ((this.StopPostingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopPostingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopPostingsAsync(string ProfileID, string SessionID, string Ticks) {
            this.StopPostingsAsync(ProfileID, SessionID, Ticks, null);
        }
        
        public void StopPostingsAsync(string ProfileID, string SessionID, string Ticks, object userState) {
            if ((this.onBeginStopPostingsDelegate == null)) {
                this.onBeginStopPostingsDelegate = new BeginOperationDelegate(this.OnBeginStopPostings);
            }
            if ((this.onEndStopPostingsDelegate == null)) {
                this.onEndStopPostingsDelegate = new EndOperationDelegate(this.OnEndStopPostings);
            }
            if ((this.onStopPostingsCompletedDelegate == null)) {
                this.onStopPostingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopPostingsCompleted);
            }
            base.InvokeAsync(this.onBeginStopPostingsDelegate, new object[] {
                        ProfileID,
                        SessionID,
                        Ticks}, this.onEndStopPostingsDelegate, this.onStopPostingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.GeoServiceRef.GeoService.BeginStopSOSOnly(string ProfileID, string SessionID, string Ticks, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStopSOSOnly(ProfileID, SessionID, Ticks, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SOS.Phone.GeoServiceRef.GeoService.EndStopSOSOnly(System.IAsyncResult result) {
            base.Channel.EndStopSOSOnly(result);
        }
        
        private System.IAsyncResult OnBeginStopSOSOnly(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProfileID = ((string)(inValues[0]));
            string SessionID = ((string)(inValues[1]));
            string Ticks = ((string)(inValues[2]));
            return ((SOS.Phone.GeoServiceRef.GeoService)(this)).BeginStopSOSOnly(ProfileID, SessionID, Ticks, callback, asyncState);
        }
        
        private object[] OnEndStopSOSOnly(System.IAsyncResult result) {
            ((SOS.Phone.GeoServiceRef.GeoService)(this)).EndStopSOSOnly(result);
            return null;
        }
        
        private void OnStopSOSOnlyCompleted(object state) {
            if ((this.StopSOSOnlyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopSOSOnlyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopSOSOnlyAsync(string ProfileID, string SessionID, string Ticks) {
            this.StopSOSOnlyAsync(ProfileID, SessionID, Ticks, null);
        }
        
        public void StopSOSOnlyAsync(string ProfileID, string SessionID, string Ticks, object userState) {
            if ((this.onBeginStopSOSOnlyDelegate == null)) {
                this.onBeginStopSOSOnlyDelegate = new BeginOperationDelegate(this.OnBeginStopSOSOnly);
            }
            if ((this.onEndStopSOSOnlyDelegate == null)) {
                this.onEndStopSOSOnlyDelegate = new EndOperationDelegate(this.OnEndStopSOSOnly);
            }
            if ((this.onStopSOSOnlyCompletedDelegate == null)) {
                this.onStopSOSOnlyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopSOSOnlyCompleted);
            }
            base.InvokeAsync(this.onBeginStopSOSOnlyDelegate, new object[] {
                        ProfileID,
                        SessionID,
                        Ticks}, this.onEndStopSOSOnlyDelegate, this.onStopSOSOnlyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.GeoServiceRef.GeoService.BeginUpdateLastSMSPostedTime(string ProfileID, string SessionID, string SMSPostedTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLastSMSPostedTime(ProfileID, SessionID, SMSPostedTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SOS.Phone.GeoServiceRef.GeoService.EndUpdateLastSMSPostedTime(System.IAsyncResult result) {
            base.Channel.EndUpdateLastSMSPostedTime(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLastSMSPostedTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProfileID = ((string)(inValues[0]));
            string SessionID = ((string)(inValues[1]));
            string SMSPostedTime = ((string)(inValues[2]));
            return ((SOS.Phone.GeoServiceRef.GeoService)(this)).BeginUpdateLastSMSPostedTime(ProfileID, SessionID, SMSPostedTime, callback, asyncState);
        }
        
        private object[] OnEndUpdateLastSMSPostedTime(System.IAsyncResult result) {
            ((SOS.Phone.GeoServiceRef.GeoService)(this)).EndUpdateLastSMSPostedTime(result);
            return null;
        }
        
        private void OnUpdateLastSMSPostedTimeCompleted(object state) {
            if ((this.UpdateLastSMSPostedTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLastSMSPostedTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLastSMSPostedTimeAsync(string ProfileID, string SessionID, string SMSPostedTime) {
            this.UpdateLastSMSPostedTimeAsync(ProfileID, SessionID, SMSPostedTime, null);
        }
        
        public void UpdateLastSMSPostedTimeAsync(string ProfileID, string SessionID, string SMSPostedTime, object userState) {
            if ((this.onBeginUpdateLastSMSPostedTimeDelegate == null)) {
                this.onBeginUpdateLastSMSPostedTimeDelegate = new BeginOperationDelegate(this.OnBeginUpdateLastSMSPostedTime);
            }
            if ((this.onEndUpdateLastSMSPostedTimeDelegate == null)) {
                this.onEndUpdateLastSMSPostedTimeDelegate = new EndOperationDelegate(this.OnEndUpdateLastSMSPostedTime);
            }
            if ((this.onUpdateLastSMSPostedTimeCompletedDelegate == null)) {
                this.onUpdateLastSMSPostedTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLastSMSPostedTimeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLastSMSPostedTimeDelegate, new object[] {
                        ProfileID,
                        SessionID,
                        SMSPostedTime}, this.onEndUpdateLastSMSPostedTimeDelegate, this.onUpdateLastSMSPostedTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.GeoServiceRef.GeoService.BeginReportIncident(SOS.Phone.GeoServiceRef.IncidentTag incidentTag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReportIncident(incidentTag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SOS.Phone.GeoServiceRef.GeoService.EndReportIncident(System.IAsyncResult result) {
            return base.Channel.EndReportIncident(result);
        }
        
        private System.IAsyncResult OnBeginReportIncident(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SOS.Phone.GeoServiceRef.IncidentTag incidentTag = ((SOS.Phone.GeoServiceRef.IncidentTag)(inValues[0]));
            return ((SOS.Phone.GeoServiceRef.GeoService)(this)).BeginReportIncident(incidentTag, callback, asyncState);
        }
        
        private object[] OnEndReportIncident(System.IAsyncResult result) {
            string retVal = ((SOS.Phone.GeoServiceRef.GeoService)(this)).EndReportIncident(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReportIncidentCompleted(object state) {
            if ((this.ReportIncidentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReportIncidentCompleted(this, new ReportIncidentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReportIncidentAsync(SOS.Phone.GeoServiceRef.IncidentTag incidentTag) {
            this.ReportIncidentAsync(incidentTag, null);
        }
        
        public void ReportIncidentAsync(SOS.Phone.GeoServiceRef.IncidentTag incidentTag, object userState) {
            if ((this.onBeginReportIncidentDelegate == null)) {
                this.onBeginReportIncidentDelegate = new BeginOperationDelegate(this.OnBeginReportIncident);
            }
            if ((this.onEndReportIncidentDelegate == null)) {
                this.onEndReportIncidentDelegate = new EndOperationDelegate(this.OnEndReportIncident);
            }
            if ((this.onReportIncidentCompletedDelegate == null)) {
                this.onReportIncidentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReportIncidentCompleted);
            }
            base.InvokeAsync(this.onBeginReportIncidentDelegate, new object[] {
                        incidentTag}, this.onEndReportIncidentDelegate, this.onReportIncidentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SOS.Phone.GeoServiceRef.GeoService CreateChannel() {
            return new GeoServiceClientChannel(this);
        }
        
        private class GeoServiceClientChannel : ChannelBase<SOS.Phone.GeoServiceRef.GeoService>, SOS.Phone.GeoServiceRef.GeoService {
            
            public GeoServiceClientChannel(System.ServiceModel.ClientBase<SOS.Phone.GeoServiceRef.GeoService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPostMyLocation(SOS.Phone.GeoServiceRef.GeoTags GeoTags, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = GeoTags;
                System.IAsyncResult _result = base.BeginInvoke("PostMyLocation", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndPostMyLocation(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("PostMyLocation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPostLocationWithMedia(SOS.Phone.GeoServiceRef.GeoTag GeoTag, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = GeoTag;
                System.IAsyncResult _result = base.BeginInvoke("PostLocationWithMedia", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndPostLocationWithMedia(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("PostLocationWithMedia", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStopPostings(string ProfileID, string SessionID, string Ticks, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ProfileID;
                _args[1] = SessionID;
                _args[2] = Ticks;
                System.IAsyncResult _result = base.BeginInvoke("StopPostings", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStopPostings(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StopPostings", _args, result);
            }
            
            public System.IAsyncResult BeginStopSOSOnly(string ProfileID, string SessionID, string Ticks, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ProfileID;
                _args[1] = SessionID;
                _args[2] = Ticks;
                System.IAsyncResult _result = base.BeginInvoke("StopSOSOnly", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStopSOSOnly(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StopSOSOnly", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateLastSMSPostedTime(string ProfileID, string SessionID, string SMSPostedTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ProfileID;
                _args[1] = SessionID;
                _args[2] = SMSPostedTime;
                System.IAsyncResult _result = base.BeginInvoke("UpdateLastSMSPostedTime", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateLastSMSPostedTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateLastSMSPostedTime", _args, result);
            }
            
            public System.IAsyncResult BeginReportIncident(SOS.Phone.GeoServiceRef.IncidentTag incidentTag, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = incidentTag;
                System.IAsyncResult _result = base.BeginInvoke("ReportIncident", _args, callback, asyncState);
                return _result;
            }
            
            public string EndReportIncident(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ReportIncident", _args, result)));
                return _result;
            }
        }
    }
}
