//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace SOS.Phone.MembershipServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOS.Phone.MembershipServiceRef.Buddy))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOS.Phone.MembershipServiceRef.ProfileLite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOS.Phone.MembershipServiceRef.Profile))]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ResultInfo> DataInfoField;
        
        private string EmailField;
        
        private string FBAuthIDField;
        
        private string FBIDField;
        
        private SOS.Phone.MembershipServiceRef.LiveCred LiveDetailsField;
        
        private string MobileNumberField;
        
        private string NameField;
        
        private string RegionCodeField;
        
        private long UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ResultInfo> DataInfo {
            get {
                return this.DataInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DataInfoField, value) != true)) {
                    this.DataInfoField = value;
                    this.RaisePropertyChanged("DataInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FBAuthID {
            get {
                return this.FBAuthIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FBAuthIDField, value) != true)) {
                    this.FBAuthIDField = value;
                    this.RaisePropertyChanged("FBAuthID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FBID {
            get {
                return this.FBIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FBIDField, value) != true)) {
                    this.FBIDField = value;
                    this.RaisePropertyChanged("FBID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public SOS.Phone.MembershipServiceRef.LiveCred LiveDetails {
            get {
                return this.LiveDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveDetailsField, value) != true)) {
                    this.LiveDetailsField = value;
                    this.RaisePropertyChanged("LiveDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeField, value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LiveCred", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class LiveCred : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Buddy", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class Buddy : SOS.Phone.MembershipServiceRef.User {
        
        private long BuddyIDField;
        
        private bool IsPrimeBuddyField;
        
        private SOS.Phone.MembershipServiceRef.BuddyState StateField;
        
        private System.Nullable<System.Guid> SubscribtionIDField;
        
        private bool ToRemoveField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BuddyID {
            get {
                return this.BuddyIDField;
            }
            set {
                if ((this.BuddyIDField.Equals(value) != true)) {
                    this.BuddyIDField = value;
                    this.RaisePropertyChanged("BuddyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimeBuddy {
            get {
                return this.IsPrimeBuddyField;
            }
            set {
                if ((this.IsPrimeBuddyField.Equals(value) != true)) {
                    this.IsPrimeBuddyField = value;
                    this.RaisePropertyChanged("IsPrimeBuddy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOS.Phone.MembershipServiceRef.BuddyState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> SubscribtionID {
            get {
                return this.SubscribtionIDField;
            }
            set {
                if ((this.SubscribtionIDField.Equals(value) != true)) {
                    this.SubscribtionIDField = value;
                    this.RaisePropertyChanged("SubscribtionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToRemove {
            get {
                return this.ToRemoveField;
            }
            set {
                if ((this.ToRemoveField.Equals(value) != true)) {
                    this.ToRemoveField = value;
                    this.RaisePropertyChanged("ToRemove");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileLite", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SOS.Phone.MembershipServiceRef.Profile))]
    public partial class ProfileLite : SOS.Phone.MembershipServiceRef.User {
        
        private bool IsSOSOnField;
        
        private bool IsTrackingOnField;
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.GeoTag> LastLocsField;
        
        private long ProfileIDField;
        
        private string SessionIDField;
        
        private string TinyURIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSOSOn {
            get {
                return this.IsSOSOnField;
            }
            set {
                if ((this.IsSOSOnField.Equals(value) != true)) {
                    this.IsSOSOnField = value;
                    this.RaisePropertyChanged("IsSOSOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrackingOn {
            get {
                return this.IsTrackingOnField;
            }
            set {
                if ((this.IsTrackingOnField.Equals(value) != true)) {
                    this.IsTrackingOnField = value;
                    this.RaisePropertyChanged("IsTrackingOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.GeoTag> LastLocs {
            get {
                return this.LastLocsField;
            }
            set {
                if ((object.ReferenceEquals(this.LastLocsField, value) != true)) {
                    this.LastLocsField = value;
                    this.RaisePropertyChanged("LastLocs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TinyURI {
            get {
                return this.TinyURIField;
            }
            set {
                if ((object.ReferenceEquals(this.TinyURIField, value) != true)) {
                    this.TinyURIField = value;
                    this.RaisePropertyChanged("TinyURI");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class Profile : SOS.Phone.MembershipServiceRef.ProfileLite {
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Group> AscGroupsField;
        
        private bool CanArchiveField;
        
        private bool CanMailField;
        
        private bool CanPostField;
        
        private bool CanSMSField;
        
        private string EnterpriseEmailIDField;
        
        private string EnterpriseSecurityTokenField;
        
        private string FBGroupIDField;
        
        private string FBGroupNameField;
        
        private bool IsValidField;
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ProfileLite> LocateBuddiesField;
        
        private bool LocationConsentField;
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Buddy> MyBuddiesField;
        
        private string NotificationUriField;
        
        private SOS.Phone.MembershipServiceRef.DeviceSetting PhoneSettingField;
        
        private string PrimeGroupIDField;
        
        private string SecurityTokenField;
        
        private SOS.Phone.MembershipServiceRef.PortalSetting SiteSettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Group> AscGroups {
            get {
                return this.AscGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.AscGroupsField, value) != true)) {
                    this.AscGroupsField = value;
                    this.RaisePropertyChanged("AscGroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanArchive {
            get {
                return this.CanArchiveField;
            }
            set {
                if ((this.CanArchiveField.Equals(value) != true)) {
                    this.CanArchiveField = value;
                    this.RaisePropertyChanged("CanArchive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanMail {
            get {
                return this.CanMailField;
            }
            set {
                if ((this.CanMailField.Equals(value) != true)) {
                    this.CanMailField = value;
                    this.RaisePropertyChanged("CanMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanPost {
            get {
                return this.CanPostField;
            }
            set {
                if ((this.CanPostField.Equals(value) != true)) {
                    this.CanPostField = value;
                    this.RaisePropertyChanged("CanPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSMS {
            get {
                return this.CanSMSField;
            }
            set {
                if ((this.CanSMSField.Equals(value) != true)) {
                    this.CanSMSField = value;
                    this.RaisePropertyChanged("CanSMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseEmailID {
            get {
                return this.EnterpriseEmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseEmailIDField, value) != true)) {
                    this.EnterpriseEmailIDField = value;
                    this.RaisePropertyChanged("EnterpriseEmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseSecurityToken {
            get {
                return this.EnterpriseSecurityTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseSecurityTokenField, value) != true)) {
                    this.EnterpriseSecurityTokenField = value;
                    this.RaisePropertyChanged("EnterpriseSecurityToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FBGroupID {
            get {
                return this.FBGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FBGroupIDField, value) != true)) {
                    this.FBGroupIDField = value;
                    this.RaisePropertyChanged("FBGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FBGroupName {
            get {
                return this.FBGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FBGroupNameField, value) != true)) {
                    this.FBGroupNameField = value;
                    this.RaisePropertyChanged("FBGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ProfileLite> LocateBuddies {
            get {
                return this.LocateBuddiesField;
            }
            set {
                if ((object.ReferenceEquals(this.LocateBuddiesField, value) != true)) {
                    this.LocateBuddiesField = value;
                    this.RaisePropertyChanged("LocateBuddies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LocationConsent {
            get {
                return this.LocationConsentField;
            }
            set {
                if ((this.LocationConsentField.Equals(value) != true)) {
                    this.LocationConsentField = value;
                    this.RaisePropertyChanged("LocationConsent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Buddy> MyBuddies {
            get {
                return this.MyBuddiesField;
            }
            set {
                if ((object.ReferenceEquals(this.MyBuddiesField, value) != true)) {
                    this.MyBuddiesField = value;
                    this.RaisePropertyChanged("MyBuddies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotificationUri {
            get {
                return this.NotificationUriField;
            }
            set {
                if ((object.ReferenceEquals(this.NotificationUriField, value) != true)) {
                    this.NotificationUriField = value;
                    this.RaisePropertyChanged("NotificationUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOS.Phone.MembershipServiceRef.DeviceSetting PhoneSetting {
            get {
                return this.PhoneSettingField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneSettingField, value) != true)) {
                    this.PhoneSettingField = value;
                    this.RaisePropertyChanged("PhoneSetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimeGroupID {
            get {
                return this.PrimeGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimeGroupIDField, value) != true)) {
                    this.PrimeGroupIDField = value;
                    this.RaisePropertyChanged("PrimeGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityToken {
            get {
                return this.SecurityTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTokenField, value) != true)) {
                    this.SecurityTokenField = value;
                    this.RaisePropertyChanged("SecurityToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOS.Phone.MembershipServiceRef.PortalSetting SiteSetting {
            get {
                return this.SiteSettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteSettingField, value) != true)) {
                    this.SiteSettingField = value;
                    this.RaisePropertyChanged("SiteSetting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultInfo", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts.OutB" +
        "ound")]
    public partial class ResultInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        private SOS.Phone.MembershipServiceRef.ResultTypeEnum ResultTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOS.Phone.MembershipServiceRef.ResultTypeEnum ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((this.ResultTypeField.Equals(value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoTag", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class GeoTag : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AccuracyField;
        
        private string AdditionalInfoField;
        
        private string AltField;
        
        private string CommandField;
        
        private string GeoDirectionField;
        
        private System.Nullable<bool> IsSOSField;
        
        private string LatField;
        
        private string LongField;
        
        private byte[] MediaContentField;
        
        private string MediaUriField;
        
        private long ProfileIDField;
        
        private string SessionIDField;
        
        private int SpeedField;
        
        private long TimeStampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Accuracy {
            get {
                return this.AccuracyField;
            }
            set {
                if ((this.AccuracyField.Equals(value) != true)) {
                    this.AccuracyField = value;
                    this.RaisePropertyChanged("Accuracy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alt {
            get {
                return this.AltField;
            }
            set {
                if ((object.ReferenceEquals(this.AltField, value) != true)) {
                    this.AltField = value;
                    this.RaisePropertyChanged("Alt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GeoDirection {
            get {
                return this.GeoDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.GeoDirectionField, value) != true)) {
                    this.GeoDirectionField = value;
                    this.RaisePropertyChanged("GeoDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsSOS {
            get {
                return this.IsSOSField;
            }
            set {
                if ((this.IsSOSField.Equals(value) != true)) {
                    this.IsSOSField = value;
                    this.RaisePropertyChanged("IsSOS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lat {
            get {
                return this.LatField;
            }
            set {
                if ((object.ReferenceEquals(this.LatField, value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Long {
            get {
                return this.LongField;
            }
            set {
                if ((object.ReferenceEquals(this.LongField, value) != true)) {
                    this.LongField = value;
                    this.RaisePropertyChanged("Long");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] MediaContent {
            get {
                return this.MediaContentField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaContentField, value) != true)) {
                    this.MediaContentField = value;
                    this.RaisePropertyChanged("MediaContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaUri {
            get {
                return this.MediaUriField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaUriField, value) != true)) {
                    this.MediaUriField = value;
                    this.RaisePropertyChanged("MediaUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((this.ProfileIDField.Equals(value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((this.SpeedField.Equals(value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceSetting", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class DeviceSetting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanEmailField;
        
        private bool CanSMSField;
        
        private string DeviceIDField;
        
        private string PlatFormField;
        
        private string ProfileIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEmail {
            get {
                return this.CanEmailField;
            }
            set {
                if ((this.CanEmailField.Equals(value) != true)) {
                    this.CanEmailField = value;
                    this.RaisePropertyChanged("CanEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSMS {
            get {
                return this.CanSMSField;
            }
            set {
                if ((this.CanSMSField.Equals(value) != true)) {
                    this.CanSMSField = value;
                    this.RaisePropertyChanged("CanSMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceID {
            get {
                return this.DeviceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIDField, value) != true)) {
                    this.DeviceIDField = value;
                    this.RaisePropertyChanged("DeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlatForm {
            get {
                return this.PlatFormField;
            }
            set {
                if ((object.ReferenceEquals(this.PlatFormField, value) != true)) {
                    this.PlatFormField = value;
                    this.RaisePropertyChanged("PlatForm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileID {
            get {
                return this.ProfileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileIDField, value) != true)) {
                    this.ProfileIDField = value;
                    this.RaisePropertyChanged("ProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortalSetting", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class PortalSetting : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class Group : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowGroupManagementField;
        
        private string EmailField;
        
        private string EnrollmentKeyField;
        
        private SOS.Phone.MembershipServiceRef.Enrollment EnrollmentTypeField;
        
        private string EnrollmentValueField;
        
        private string GeoLocationField;
        
        private string GroupIDField;
        
        private string GroupLocationField;
        
        private string GroupNameField;
        
        private bool IsActiveField;
        
        private bool IsValidatedField;
        
        private SOS.Phone.MembershipServiceRef.LiveCred LiveInfoField;
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Profile> MembersField;
        
        private bool NotifySubgroupsField;
        
        private System.Nullable<int> ParentGroupIDField;
        
        private string PhoneNumberField;
        
        private string ShapeFileIDField;
        
        private bool ShowIncidentsField;
        
        private string SubGroupIdentificationKeyField;
        
        private bool ToRemoveField;
        
        private SOS.Phone.MembershipServiceRef.GroupType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool AllowGroupManagement {
            get {
                return this.AllowGroupManagementField;
            }
            set {
                if ((this.AllowGroupManagementField.Equals(value) != true)) {
                    this.AllowGroupManagementField = value;
                    this.RaisePropertyChanged("AllowGroupManagement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnrollmentKey {
            get {
                return this.EnrollmentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EnrollmentKeyField, value) != true)) {
                    this.EnrollmentKeyField = value;
                    this.RaisePropertyChanged("EnrollmentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOS.Phone.MembershipServiceRef.Enrollment EnrollmentType {
            get {
                return this.EnrollmentTypeField;
            }
            set {
                if ((this.EnrollmentTypeField.Equals(value) != true)) {
                    this.EnrollmentTypeField = value;
                    this.RaisePropertyChanged("EnrollmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnrollmentValue {
            get {
                return this.EnrollmentValueField;
            }
            set {
                if ((object.ReferenceEquals(this.EnrollmentValueField, value) != true)) {
                    this.EnrollmentValueField = value;
                    this.RaisePropertyChanged("EnrollmentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GeoLocation {
            get {
                return this.GeoLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.GeoLocationField, value) != true)) {
                    this.GeoLocationField = value;
                    this.RaisePropertyChanged("GeoLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupLocation {
            get {
                return this.GroupLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupLocationField, value) != true)) {
                    this.GroupLocationField = value;
                    this.RaisePropertyChanged("GroupLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidated {
            get {
                return this.IsValidatedField;
            }
            set {
                if ((this.IsValidatedField.Equals(value) != true)) {
                    this.IsValidatedField = value;
                    this.RaisePropertyChanged("IsValidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public SOS.Phone.MembershipServiceRef.LiveCred LiveInfo {
            get {
                return this.LiveInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.LiveInfoField, value) != true)) {
                    this.LiveInfoField = value;
                    this.RaisePropertyChanged("LiveInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Profile> Members {
            get {
                return this.MembersField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersField, value) != true)) {
                    this.MembersField = value;
                    this.RaisePropertyChanged("Members");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool NotifySubgroups {
            get {
                return this.NotifySubgroupsField;
            }
            set {
                if ((this.NotifySubgroupsField.Equals(value) != true)) {
                    this.NotifySubgroupsField = value;
                    this.RaisePropertyChanged("NotifySubgroups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public System.Nullable<int> ParentGroupID {
            get {
                return this.ParentGroupIDField;
            }
            set {
                if ((this.ParentGroupIDField.Equals(value) != true)) {
                    this.ParentGroupIDField = value;
                    this.RaisePropertyChanged("ParentGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ShapeFileID {
            get {
                return this.ShapeFileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShapeFileIDField, value) != true)) {
                    this.ShapeFileIDField = value;
                    this.RaisePropertyChanged("ShapeFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public bool ShowIncidents {
            get {
                return this.ShowIncidentsField;
            }
            set {
                if ((this.ShowIncidentsField.Equals(value) != true)) {
                    this.ShowIncidentsField = value;
                    this.RaisePropertyChanged("ShowIncidents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SubGroupIdentificationKey {
            get {
                return this.SubGroupIdentificationKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SubGroupIdentificationKeyField, value) != true)) {
                    this.SubGroupIdentificationKeyField = value;
                    this.RaisePropertyChanged("SubGroupIdentificationKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ToRemove {
            get {
                return this.ToRemoveField;
            }
            set {
                if ((this.ToRemoveField.Equals(value) != true)) {
                    this.ToRemoveField = value;
                    this.RaisePropertyChanged("ToRemove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SOS.Phone.MembershipServiceRef.GroupType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts.OutB" +
        "ound")]
    public enum ResultTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthError = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuddyState", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public enum BuddyState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspended = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blocked = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Marshal = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enrollment", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public enum Enrollment : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoOrgMail = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Moderator = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupType", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public enum GroupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Public = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Private = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Social = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileList", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class ProfileList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ResultInfo> DataInfoField;
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Profile> ListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ResultInfo> DataInfo {
            get {
                return this.DataInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DataInfoField, value) != true)) {
                    this.DataInfoField = value;
                    this.RaisePropertyChanged("DataInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.Profile> List {
            get {
                return this.ListField;
            }
            set {
                if ((object.ReferenceEquals(this.ListField, value) != true)) {
                    this.ListField = value;
                    this.RaisePropertyChanged("List");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneValidation", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class PhoneValidation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AuthenticatedLiveIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ResultInfo> DataInfoField;
        
        private string DeviceTypeField;
        
        private string EnterpriseEmailIDField;
        
        private string EnterpriseSecurityTokenField;
        
        private string NameField;
        
        private string PhoneNumberField;
        
        private string RegionCodeField;
        
        private string SecurityTokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticatedLiveID {
            get {
                return this.AuthenticatedLiveIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticatedLiveIDField, value) != true)) {
                    this.AuthenticatedLiveIDField = value;
                    this.RaisePropertyChanged("AuthenticatedLiveID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<SOS.Phone.MembershipServiceRef.ResultInfo> DataInfo {
            get {
                return this.DataInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DataInfoField, value) != true)) {
                    this.DataInfoField = value;
                    this.RaisePropertyChanged("DataInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTypeField, value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseEmailID {
            get {
                return this.EnterpriseEmailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseEmailIDField, value) != true)) {
                    this.EnterpriseEmailIDField = value;
                    this.RaisePropertyChanged("EnterpriseEmailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterpriseSecurityToken {
            get {
                return this.EnterpriseSecurityTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterpriseSecurityTokenField, value) != true)) {
                    this.EnterpriseSecurityTokenField = value;
                    this.RaisePropertyChanged("EnterpriseSecurityToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionCode {
            get {
                return this.RegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionCodeField, value) != true)) {
                    this.RegionCodeField = value;
                    this.RaisePropertyChanged("RegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityToken {
            get {
                return this.SecurityTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityTokenField, value) != true)) {
                    this.SecurityTokenField = value;
                    this.RaisePropertyChanged("SecurityToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HealthUpdate", Namespace="http://schemas.datacontract.org/2004/07/SOS.Service.Interfaces.DataContracts")]
    public partial class HealthUpdate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsGroupModifiedField;
        
        private bool IsProfileActiveField;
        
        private string ServerVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGroupModified {
            get {
                return this.IsGroupModifiedField;
            }
            set {
                if ((this.IsGroupModifiedField.Equals(value) != true)) {
                    this.IsGroupModifiedField = value;
                    this.RaisePropertyChanged("IsGroupModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsProfileActive {
            get {
                return this.IsProfileActiveField;
            }
            set {
                if ((this.IsProfileActiveField.Equals(value) != true)) {
                    this.IsProfileActiveField = value;
                    this.RaisePropertyChanged("IsProfileActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerVersion {
            get {
                return this.ServerVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerVersionField, value) != true)) {
                    this.ServerVersionField = value;
                    this.RaisePropertyChanged("ServerVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.microsoft.com/sos/2013/02", ConfigurationName="MembershipServiceRef.MembershipService")]
    public interface MembershipService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/GetProfileByProfileID", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/GetProfileByProfileIDRespo" +
            "nse")]
        System.IAsyncResult BeginGetProfileByProfileID(string ProfileID, System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.Profile EndGetProfileByProfileID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/GetProfileLiteByProfileID", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/GetProfileLiteByProfileIDR" +
            "esponse")]
        System.IAsyncResult BeginGetProfileLiteByProfileID(string ProfileID, string GroupID, System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.ProfileLite EndGetProfileLiteByProfileID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/GetProfilesForLiveID", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/GetProfilesForLiveIDRespon" +
            "se")]
        System.IAsyncResult BeginGetProfilesForLiveID(System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.ProfileList EndGetProfilesForLiveID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/UnBuddy", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/UnBuddyResponse")]
        System.IAsyncResult BeginUnBuddy(string ProfileID, string BuddyUserID, System.AsyncCallback callback, object asyncState);
        
        void EndUnBuddy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/CreatePhoneValidator", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/CreatePhoneValidatorRespon" +
            "se")]
        System.IAsyncResult BeginCreatePhoneValidator(SOS.Phone.MembershipServiceRef.PhoneValidation PhoneValidationIP, System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.PhoneValidation EndCreatePhoneValidator(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/CreateProfile", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/CreateProfileResponse")]
        System.IAsyncResult BeginCreateProfile(SOS.Phone.MembershipServiceRef.Profile BareProfile, System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.Profile EndCreateProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/UpdateProfilePhone", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/UpdateProfilePhoneResponse" +
            "")]
        System.IAsyncResult BeginUpdateProfilePhone(SOS.Phone.MembershipServiceRef.Profile Profile2Update, System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.Profile EndUpdateProfilePhone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/UpdateProfile", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/UpdateProfileResponse")]
        System.IAsyncResult BeginUpdateProfile(SOS.Phone.MembershipServiceRef.Profile Profile2Update, System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.Profile EndUpdateProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/CheckPendingUpdates", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/CheckPendingUpdatesRespons" +
            "e")]
        System.IAsyncResult BeginCheckPendingUpdates(string ProfileID, string LastUpdateDate, string CurrentTime, System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.HealthUpdate EndCheckPendingUpdates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://www.microsoft.com/sos/2013/02/MembershipService/UnRegisterUser", ReplyAction="http://www.microsoft.com/sos/2013/02/MembershipService/UnRegisterUserResponse")]
        System.IAsyncResult BeginUnRegisterUser(System.AsyncCallback callback, object asyncState);
        
        SOS.Phone.MembershipServiceRef.ResultInfo EndUnRegisterUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MembershipServiceChannel : SOS.Phone.MembershipServiceRef.MembershipService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProfileByProfileIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProfileByProfileIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.Profile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.Profile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProfileLiteByProfileIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProfileLiteByProfileIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.ProfileLite Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.ProfileLite)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProfilesForLiveIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProfilesForLiveIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.ProfileList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.ProfileList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreatePhoneValidatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreatePhoneValidatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.PhoneValidation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.PhoneValidation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.Profile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.Profile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateProfilePhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateProfilePhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.Profile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.Profile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.Profile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.Profile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckPendingUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckPendingUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.HealthUpdate Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.HealthUpdate)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnRegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnRegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SOS.Phone.MembershipServiceRef.ResultInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SOS.Phone.MembershipServiceRef.ResultInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MembershipServiceClient : System.ServiceModel.ClientBase<SOS.Phone.MembershipServiceRef.MembershipService>, SOS.Phone.MembershipServiceRef.MembershipService {
        
        private BeginOperationDelegate onBeginGetProfileByProfileIDDelegate;
        
        private EndOperationDelegate onEndGetProfileByProfileIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetProfileByProfileIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProfileLiteByProfileIDDelegate;
        
        private EndOperationDelegate onEndGetProfileLiteByProfileIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetProfileLiteByProfileIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProfilesForLiveIDDelegate;
        
        private EndOperationDelegate onEndGetProfilesForLiveIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetProfilesForLiveIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnBuddyDelegate;
        
        private EndOperationDelegate onEndUnBuddyDelegate;
        
        private System.Threading.SendOrPostCallback onUnBuddyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreatePhoneValidatorDelegate;
        
        private EndOperationDelegate onEndCreatePhoneValidatorDelegate;
        
        private System.Threading.SendOrPostCallback onCreatePhoneValidatorCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateProfileDelegate;
        
        private EndOperationDelegate onEndCreateProfileDelegate;
        
        private System.Threading.SendOrPostCallback onCreateProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProfilePhoneDelegate;
        
        private EndOperationDelegate onEndUpdateProfilePhoneDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProfilePhoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateProfileDelegate;
        
        private EndOperationDelegate onEndUpdateProfileDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckPendingUpdatesDelegate;
        
        private EndOperationDelegate onEndCheckPendingUpdatesDelegate;
        
        private System.Threading.SendOrPostCallback onCheckPendingUpdatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnRegisterUserDelegate;
        
        private EndOperationDelegate onEndUnRegisterUserDelegate;
        
        private System.Threading.SendOrPostCallback onUnRegisterUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MembershipServiceClient() {
        }
        
        public MembershipServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MembershipServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MembershipServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetProfileByProfileIDCompletedEventArgs> GetProfileByProfileIDCompleted;
        
        public event System.EventHandler<GetProfileLiteByProfileIDCompletedEventArgs> GetProfileLiteByProfileIDCompleted;
        
        public event System.EventHandler<GetProfilesForLiveIDCompletedEventArgs> GetProfilesForLiveIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnBuddyCompleted;
        
        public event System.EventHandler<CreatePhoneValidatorCompletedEventArgs> CreatePhoneValidatorCompleted;
        
        public event System.EventHandler<CreateProfileCompletedEventArgs> CreateProfileCompleted;
        
        public event System.EventHandler<UpdateProfilePhoneCompletedEventArgs> UpdateProfilePhoneCompleted;
        
        public event System.EventHandler<UpdateProfileCompletedEventArgs> UpdateProfileCompleted;
        
        public event System.EventHandler<CheckPendingUpdatesCompletedEventArgs> CheckPendingUpdatesCompleted;
        
        public event System.EventHandler<UnRegisterUserCompletedEventArgs> UnRegisterUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginGetProfileByProfileID(string ProfileID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProfileByProfileID(ProfileID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.Profile SOS.Phone.MembershipServiceRef.MembershipService.EndGetProfileByProfileID(System.IAsyncResult result) {
            return base.Channel.EndGetProfileByProfileID(result);
        }
        
        private System.IAsyncResult OnBeginGetProfileByProfileID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProfileID = ((string)(inValues[0]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginGetProfileByProfileID(ProfileID, callback, asyncState);
        }
        
        private object[] OnEndGetProfileByProfileID(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.Profile retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndGetProfileByProfileID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProfileByProfileIDCompleted(object state) {
            if ((this.GetProfileByProfileIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProfileByProfileIDCompleted(this, new GetProfileByProfileIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProfileByProfileIDAsync(string ProfileID) {
            this.GetProfileByProfileIDAsync(ProfileID, null);
        }
        
        public void GetProfileByProfileIDAsync(string ProfileID, object userState) {
            if ((this.onBeginGetProfileByProfileIDDelegate == null)) {
                this.onBeginGetProfileByProfileIDDelegate = new BeginOperationDelegate(this.OnBeginGetProfileByProfileID);
            }
            if ((this.onEndGetProfileByProfileIDDelegate == null)) {
                this.onEndGetProfileByProfileIDDelegate = new EndOperationDelegate(this.OnEndGetProfileByProfileID);
            }
            if ((this.onGetProfileByProfileIDCompletedDelegate == null)) {
                this.onGetProfileByProfileIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProfileByProfileIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetProfileByProfileIDDelegate, new object[] {
                        ProfileID}, this.onEndGetProfileByProfileIDDelegate, this.onGetProfileByProfileIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginGetProfileLiteByProfileID(string ProfileID, string GroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProfileLiteByProfileID(ProfileID, GroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.ProfileLite SOS.Phone.MembershipServiceRef.MembershipService.EndGetProfileLiteByProfileID(System.IAsyncResult result) {
            return base.Channel.EndGetProfileLiteByProfileID(result);
        }
        
        private System.IAsyncResult OnBeginGetProfileLiteByProfileID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProfileID = ((string)(inValues[0]));
            string GroupID = ((string)(inValues[1]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginGetProfileLiteByProfileID(ProfileID, GroupID, callback, asyncState);
        }
        
        private object[] OnEndGetProfileLiteByProfileID(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.ProfileLite retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndGetProfileLiteByProfileID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProfileLiteByProfileIDCompleted(object state) {
            if ((this.GetProfileLiteByProfileIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProfileLiteByProfileIDCompleted(this, new GetProfileLiteByProfileIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProfileLiteByProfileIDAsync(string ProfileID, string GroupID) {
            this.GetProfileLiteByProfileIDAsync(ProfileID, GroupID, null);
        }
        
        public void GetProfileLiteByProfileIDAsync(string ProfileID, string GroupID, object userState) {
            if ((this.onBeginGetProfileLiteByProfileIDDelegate == null)) {
                this.onBeginGetProfileLiteByProfileIDDelegate = new BeginOperationDelegate(this.OnBeginGetProfileLiteByProfileID);
            }
            if ((this.onEndGetProfileLiteByProfileIDDelegate == null)) {
                this.onEndGetProfileLiteByProfileIDDelegate = new EndOperationDelegate(this.OnEndGetProfileLiteByProfileID);
            }
            if ((this.onGetProfileLiteByProfileIDCompletedDelegate == null)) {
                this.onGetProfileLiteByProfileIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProfileLiteByProfileIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetProfileLiteByProfileIDDelegate, new object[] {
                        ProfileID,
                        GroupID}, this.onEndGetProfileLiteByProfileIDDelegate, this.onGetProfileLiteByProfileIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginGetProfilesForLiveID(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProfilesForLiveID(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.ProfileList SOS.Phone.MembershipServiceRef.MembershipService.EndGetProfilesForLiveID(System.IAsyncResult result) {
            return base.Channel.EndGetProfilesForLiveID(result);
        }
        
        private System.IAsyncResult OnBeginGetProfilesForLiveID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginGetProfilesForLiveID(callback, asyncState);
        }
        
        private object[] OnEndGetProfilesForLiveID(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.ProfileList retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndGetProfilesForLiveID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProfilesForLiveIDCompleted(object state) {
            if ((this.GetProfilesForLiveIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProfilesForLiveIDCompleted(this, new GetProfilesForLiveIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProfilesForLiveIDAsync() {
            this.GetProfilesForLiveIDAsync(null);
        }
        
        public void GetProfilesForLiveIDAsync(object userState) {
            if ((this.onBeginGetProfilesForLiveIDDelegate == null)) {
                this.onBeginGetProfilesForLiveIDDelegate = new BeginOperationDelegate(this.OnBeginGetProfilesForLiveID);
            }
            if ((this.onEndGetProfilesForLiveIDDelegate == null)) {
                this.onEndGetProfilesForLiveIDDelegate = new EndOperationDelegate(this.OnEndGetProfilesForLiveID);
            }
            if ((this.onGetProfilesForLiveIDCompletedDelegate == null)) {
                this.onGetProfilesForLiveIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProfilesForLiveIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetProfilesForLiveIDDelegate, null, this.onEndGetProfilesForLiveIDDelegate, this.onGetProfilesForLiveIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginUnBuddy(string ProfileID, string BuddyUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnBuddy(ProfileID, BuddyUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void SOS.Phone.MembershipServiceRef.MembershipService.EndUnBuddy(System.IAsyncResult result) {
            base.Channel.EndUnBuddy(result);
        }
        
        private System.IAsyncResult OnBeginUnBuddy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProfileID = ((string)(inValues[0]));
            string BuddyUserID = ((string)(inValues[1]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginUnBuddy(ProfileID, BuddyUserID, callback, asyncState);
        }
        
        private object[] OnEndUnBuddy(System.IAsyncResult result) {
            ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndUnBuddy(result);
            return null;
        }
        
        private void OnUnBuddyCompleted(object state) {
            if ((this.UnBuddyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnBuddyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnBuddyAsync(string ProfileID, string BuddyUserID) {
            this.UnBuddyAsync(ProfileID, BuddyUserID, null);
        }
        
        public void UnBuddyAsync(string ProfileID, string BuddyUserID, object userState) {
            if ((this.onBeginUnBuddyDelegate == null)) {
                this.onBeginUnBuddyDelegate = new BeginOperationDelegate(this.OnBeginUnBuddy);
            }
            if ((this.onEndUnBuddyDelegate == null)) {
                this.onEndUnBuddyDelegate = new EndOperationDelegate(this.OnEndUnBuddy);
            }
            if ((this.onUnBuddyCompletedDelegate == null)) {
                this.onUnBuddyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnBuddyCompleted);
            }
            base.InvokeAsync(this.onBeginUnBuddyDelegate, new object[] {
                        ProfileID,
                        BuddyUserID}, this.onEndUnBuddyDelegate, this.onUnBuddyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginCreatePhoneValidator(SOS.Phone.MembershipServiceRef.PhoneValidation PhoneValidationIP, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreatePhoneValidator(PhoneValidationIP, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.PhoneValidation SOS.Phone.MembershipServiceRef.MembershipService.EndCreatePhoneValidator(System.IAsyncResult result) {
            return base.Channel.EndCreatePhoneValidator(result);
        }
        
        private System.IAsyncResult OnBeginCreatePhoneValidator(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SOS.Phone.MembershipServiceRef.PhoneValidation PhoneValidationIP = ((SOS.Phone.MembershipServiceRef.PhoneValidation)(inValues[0]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginCreatePhoneValidator(PhoneValidationIP, callback, asyncState);
        }
        
        private object[] OnEndCreatePhoneValidator(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.PhoneValidation retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndCreatePhoneValidator(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreatePhoneValidatorCompleted(object state) {
            if ((this.CreatePhoneValidatorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreatePhoneValidatorCompleted(this, new CreatePhoneValidatorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreatePhoneValidatorAsync(SOS.Phone.MembershipServiceRef.PhoneValidation PhoneValidationIP) {
            this.CreatePhoneValidatorAsync(PhoneValidationIP, null);
        }
        
        public void CreatePhoneValidatorAsync(SOS.Phone.MembershipServiceRef.PhoneValidation PhoneValidationIP, object userState) {
            if ((this.onBeginCreatePhoneValidatorDelegate == null)) {
                this.onBeginCreatePhoneValidatorDelegate = new BeginOperationDelegate(this.OnBeginCreatePhoneValidator);
            }
            if ((this.onEndCreatePhoneValidatorDelegate == null)) {
                this.onEndCreatePhoneValidatorDelegate = new EndOperationDelegate(this.OnEndCreatePhoneValidator);
            }
            if ((this.onCreatePhoneValidatorCompletedDelegate == null)) {
                this.onCreatePhoneValidatorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreatePhoneValidatorCompleted);
            }
            base.InvokeAsync(this.onBeginCreatePhoneValidatorDelegate, new object[] {
                        PhoneValidationIP}, this.onEndCreatePhoneValidatorDelegate, this.onCreatePhoneValidatorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginCreateProfile(SOS.Phone.MembershipServiceRef.Profile BareProfile, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateProfile(BareProfile, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.Profile SOS.Phone.MembershipServiceRef.MembershipService.EndCreateProfile(System.IAsyncResult result) {
            return base.Channel.EndCreateProfile(result);
        }
        
        private System.IAsyncResult OnBeginCreateProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SOS.Phone.MembershipServiceRef.Profile BareProfile = ((SOS.Phone.MembershipServiceRef.Profile)(inValues[0]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginCreateProfile(BareProfile, callback, asyncState);
        }
        
        private object[] OnEndCreateProfile(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.Profile retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndCreateProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateProfileCompleted(object state) {
            if ((this.CreateProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateProfileCompleted(this, new CreateProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateProfileAsync(SOS.Phone.MembershipServiceRef.Profile BareProfile) {
            this.CreateProfileAsync(BareProfile, null);
        }
        
        public void CreateProfileAsync(SOS.Phone.MembershipServiceRef.Profile BareProfile, object userState) {
            if ((this.onBeginCreateProfileDelegate == null)) {
                this.onBeginCreateProfileDelegate = new BeginOperationDelegate(this.OnBeginCreateProfile);
            }
            if ((this.onEndCreateProfileDelegate == null)) {
                this.onEndCreateProfileDelegate = new EndOperationDelegate(this.OnEndCreateProfile);
            }
            if ((this.onCreateProfileCompletedDelegate == null)) {
                this.onCreateProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateProfileCompleted);
            }
            base.InvokeAsync(this.onBeginCreateProfileDelegate, new object[] {
                        BareProfile}, this.onEndCreateProfileDelegate, this.onCreateProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginUpdateProfilePhone(SOS.Phone.MembershipServiceRef.Profile Profile2Update, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProfilePhone(Profile2Update, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.Profile SOS.Phone.MembershipServiceRef.MembershipService.EndUpdateProfilePhone(System.IAsyncResult result) {
            return base.Channel.EndUpdateProfilePhone(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProfilePhone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SOS.Phone.MembershipServiceRef.Profile Profile2Update = ((SOS.Phone.MembershipServiceRef.Profile)(inValues[0]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginUpdateProfilePhone(Profile2Update, callback, asyncState);
        }
        
        private object[] OnEndUpdateProfilePhone(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.Profile retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndUpdateProfilePhone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateProfilePhoneCompleted(object state) {
            if ((this.UpdateProfilePhoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProfilePhoneCompleted(this, new UpdateProfilePhoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProfilePhoneAsync(SOS.Phone.MembershipServiceRef.Profile Profile2Update) {
            this.UpdateProfilePhoneAsync(Profile2Update, null);
        }
        
        public void UpdateProfilePhoneAsync(SOS.Phone.MembershipServiceRef.Profile Profile2Update, object userState) {
            if ((this.onBeginUpdateProfilePhoneDelegate == null)) {
                this.onBeginUpdateProfilePhoneDelegate = new BeginOperationDelegate(this.OnBeginUpdateProfilePhone);
            }
            if ((this.onEndUpdateProfilePhoneDelegate == null)) {
                this.onEndUpdateProfilePhoneDelegate = new EndOperationDelegate(this.OnEndUpdateProfilePhone);
            }
            if ((this.onUpdateProfilePhoneCompletedDelegate == null)) {
                this.onUpdateProfilePhoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProfilePhoneCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProfilePhoneDelegate, new object[] {
                        Profile2Update}, this.onEndUpdateProfilePhoneDelegate, this.onUpdateProfilePhoneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginUpdateProfile(SOS.Phone.MembershipServiceRef.Profile Profile2Update, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateProfile(Profile2Update, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.Profile SOS.Phone.MembershipServiceRef.MembershipService.EndUpdateProfile(System.IAsyncResult result) {
            return base.Channel.EndUpdateProfile(result);
        }
        
        private System.IAsyncResult OnBeginUpdateProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SOS.Phone.MembershipServiceRef.Profile Profile2Update = ((SOS.Phone.MembershipServiceRef.Profile)(inValues[0]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginUpdateProfile(Profile2Update, callback, asyncState);
        }
        
        private object[] OnEndUpdateProfile(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.Profile retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndUpdateProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateProfileCompleted(object state) {
            if ((this.UpdateProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateProfileCompleted(this, new UpdateProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateProfileAsync(SOS.Phone.MembershipServiceRef.Profile Profile2Update) {
            this.UpdateProfileAsync(Profile2Update, null);
        }
        
        public void UpdateProfileAsync(SOS.Phone.MembershipServiceRef.Profile Profile2Update, object userState) {
            if ((this.onBeginUpdateProfileDelegate == null)) {
                this.onBeginUpdateProfileDelegate = new BeginOperationDelegate(this.OnBeginUpdateProfile);
            }
            if ((this.onEndUpdateProfileDelegate == null)) {
                this.onEndUpdateProfileDelegate = new EndOperationDelegate(this.OnEndUpdateProfile);
            }
            if ((this.onUpdateProfileCompletedDelegate == null)) {
                this.onUpdateProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateProfileCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateProfileDelegate, new object[] {
                        Profile2Update}, this.onEndUpdateProfileDelegate, this.onUpdateProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginCheckPendingUpdates(string ProfileID, string LastUpdateDate, string CurrentTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckPendingUpdates(ProfileID, LastUpdateDate, CurrentTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.HealthUpdate SOS.Phone.MembershipServiceRef.MembershipService.EndCheckPendingUpdates(System.IAsyncResult result) {
            return base.Channel.EndCheckPendingUpdates(result);
        }
        
        private System.IAsyncResult OnBeginCheckPendingUpdates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProfileID = ((string)(inValues[0]));
            string LastUpdateDate = ((string)(inValues[1]));
            string CurrentTime = ((string)(inValues[2]));
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginCheckPendingUpdates(ProfileID, LastUpdateDate, CurrentTime, callback, asyncState);
        }
        
        private object[] OnEndCheckPendingUpdates(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.HealthUpdate retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndCheckPendingUpdates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckPendingUpdatesCompleted(object state) {
            if ((this.CheckPendingUpdatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckPendingUpdatesCompleted(this, new CheckPendingUpdatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckPendingUpdatesAsync(string ProfileID, string LastUpdateDate, string CurrentTime) {
            this.CheckPendingUpdatesAsync(ProfileID, LastUpdateDate, CurrentTime, null);
        }
        
        public void CheckPendingUpdatesAsync(string ProfileID, string LastUpdateDate, string CurrentTime, object userState) {
            if ((this.onBeginCheckPendingUpdatesDelegate == null)) {
                this.onBeginCheckPendingUpdatesDelegate = new BeginOperationDelegate(this.OnBeginCheckPendingUpdates);
            }
            if ((this.onEndCheckPendingUpdatesDelegate == null)) {
                this.onEndCheckPendingUpdatesDelegate = new EndOperationDelegate(this.OnEndCheckPendingUpdates);
            }
            if ((this.onCheckPendingUpdatesCompletedDelegate == null)) {
                this.onCheckPendingUpdatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckPendingUpdatesCompleted);
            }
            base.InvokeAsync(this.onBeginCheckPendingUpdatesDelegate, new object[] {
                        ProfileID,
                        LastUpdateDate,
                        CurrentTime}, this.onEndCheckPendingUpdatesDelegate, this.onCheckPendingUpdatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SOS.Phone.MembershipServiceRef.MembershipService.BeginUnRegisterUser(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnRegisterUser(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SOS.Phone.MembershipServiceRef.ResultInfo SOS.Phone.MembershipServiceRef.MembershipService.EndUnRegisterUser(System.IAsyncResult result) {
            return base.Channel.EndUnRegisterUser(result);
        }
        
        private System.IAsyncResult OnBeginUnRegisterUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).BeginUnRegisterUser(callback, asyncState);
        }
        
        private object[] OnEndUnRegisterUser(System.IAsyncResult result) {
            SOS.Phone.MembershipServiceRef.ResultInfo retVal = ((SOS.Phone.MembershipServiceRef.MembershipService)(this)).EndUnRegisterUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnRegisterUserCompleted(object state) {
            if ((this.UnRegisterUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnRegisterUserCompleted(this, new UnRegisterUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnRegisterUserAsync() {
            this.UnRegisterUserAsync(null);
        }
        
        public void UnRegisterUserAsync(object userState) {
            if ((this.onBeginUnRegisterUserDelegate == null)) {
                this.onBeginUnRegisterUserDelegate = new BeginOperationDelegate(this.OnBeginUnRegisterUser);
            }
            if ((this.onEndUnRegisterUserDelegate == null)) {
                this.onEndUnRegisterUserDelegate = new EndOperationDelegate(this.OnEndUnRegisterUser);
            }
            if ((this.onUnRegisterUserCompletedDelegate == null)) {
                this.onUnRegisterUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnRegisterUserCompleted);
            }
            base.InvokeAsync(this.onBeginUnRegisterUserDelegate, null, this.onEndUnRegisterUserDelegate, this.onUnRegisterUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SOS.Phone.MembershipServiceRef.MembershipService CreateChannel() {
            return new MembershipServiceClientChannel(this);
        }
        
        private class MembershipServiceClientChannel : ChannelBase<SOS.Phone.MembershipServiceRef.MembershipService>, SOS.Phone.MembershipServiceRef.MembershipService {
            
            public MembershipServiceClientChannel(System.ServiceModel.ClientBase<SOS.Phone.MembershipServiceRef.MembershipService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetProfileByProfileID(string ProfileID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ProfileID;
                System.IAsyncResult _result = base.BeginInvoke("GetProfileByProfileID", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.Profile EndGetProfileByProfileID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.Profile _result = ((SOS.Phone.MembershipServiceRef.Profile)(base.EndInvoke("GetProfileByProfileID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProfileLiteByProfileID(string ProfileID, string GroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ProfileID;
                _args[1] = GroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetProfileLiteByProfileID", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.ProfileLite EndGetProfileLiteByProfileID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.ProfileLite _result = ((SOS.Phone.MembershipServiceRef.ProfileLite)(base.EndInvoke("GetProfileLiteByProfileID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProfilesForLiveID(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProfilesForLiveID", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.ProfileList EndGetProfilesForLiveID(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.ProfileList _result = ((SOS.Phone.MembershipServiceRef.ProfileList)(base.EndInvoke("GetProfilesForLiveID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnBuddy(string ProfileID, string BuddyUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ProfileID;
                _args[1] = BuddyUserID;
                System.IAsyncResult _result = base.BeginInvoke("UnBuddy", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUnBuddy(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UnBuddy", _args, result);
            }
            
            public System.IAsyncResult BeginCreatePhoneValidator(SOS.Phone.MembershipServiceRef.PhoneValidation PhoneValidationIP, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PhoneValidationIP;
                System.IAsyncResult _result = base.BeginInvoke("CreatePhoneValidator", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.PhoneValidation EndCreatePhoneValidator(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.PhoneValidation _result = ((SOS.Phone.MembershipServiceRef.PhoneValidation)(base.EndInvoke("CreatePhoneValidator", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateProfile(SOS.Phone.MembershipServiceRef.Profile BareProfile, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = BareProfile;
                System.IAsyncResult _result = base.BeginInvoke("CreateProfile", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.Profile EndCreateProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.Profile _result = ((SOS.Phone.MembershipServiceRef.Profile)(base.EndInvoke("CreateProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateProfilePhone(SOS.Phone.MembershipServiceRef.Profile Profile2Update, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Profile2Update;
                System.IAsyncResult _result = base.BeginInvoke("UpdateProfilePhone", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.Profile EndUpdateProfilePhone(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.Profile _result = ((SOS.Phone.MembershipServiceRef.Profile)(base.EndInvoke("UpdateProfilePhone", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateProfile(SOS.Phone.MembershipServiceRef.Profile Profile2Update, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Profile2Update;
                System.IAsyncResult _result = base.BeginInvoke("UpdateProfile", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.Profile EndUpdateProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.Profile _result = ((SOS.Phone.MembershipServiceRef.Profile)(base.EndInvoke("UpdateProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckPendingUpdates(string ProfileID, string LastUpdateDate, string CurrentTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ProfileID;
                _args[1] = LastUpdateDate;
                _args[2] = CurrentTime;
                System.IAsyncResult _result = base.BeginInvoke("CheckPendingUpdates", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.HealthUpdate EndCheckPendingUpdates(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.HealthUpdate _result = ((SOS.Phone.MembershipServiceRef.HealthUpdate)(base.EndInvoke("CheckPendingUpdates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnRegisterUser(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("UnRegisterUser", _args, callback, asyncState);
                return _result;
            }
            
            public SOS.Phone.MembershipServiceRef.ResultInfo EndUnRegisterUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                SOS.Phone.MembershipServiceRef.ResultInfo _result = ((SOS.Phone.MembershipServiceRef.ResultInfo)(base.EndInvoke("UnRegisterUser", _args, result)));
                return _result;
            }
        }
    }
}
